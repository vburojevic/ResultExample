//
//  CommentListPresenter.swift
//  ResultExample
//
//  Created by Vedran Burojevic on 27/09/2016.
//  Copyright (c) 2016 Infinum. All rights reserved.
//
//  This file was generated by the üêç VIPER generator
//

import UIKit
import Alamofire
import Unbox
import Result
import enum Result.Result

final class CommentListPresenter: NSObject {
    
    // MARK: - Private properties -

    private weak var _view: CommentListViewInterface?
    private var _interactor: CommentListInteractorInterface
    private var _wireframe: CommentListWireframeInterface
    
    private var _items = [CommentCellItem]()
    
    // MARK: - Lifecycle -
    
    init (wireframe: CommentListWireframeInterface, view: CommentListViewInterface, interactor: CommentListInteractorInterface) {
        _wireframe = wireframe
        _view = view
        _interactor = interactor
    }
    
}

// MARK: - Extensions -

extension CommentListPresenter: CommentListViewDelegateInterface {
    
    func viewDidLoad() {
        _view?.showLoading()
        _interactor.loadUsers { [weak self] (result: Result<[Comment], NetworkError>) in
            let transformedResult = result.map { $0.map { CommentCellItem(comment: $0) } }
            
//            switch transformedResult {
//            case .Success(let commentCellItems):
//                self?._items.appendContentsOf(commentCellItems)
//                self?._view?.reloadData()
//                self?._view?.hideLoading()
//            case .Failure(let networkError):
//                self?._view?.hideWithError(message: networkError.message)
//            }
            
            self?._items.appendContentsOf(transformedResult ?? [])
            self?._view?.reloadData()
            self?._view?.hideLoading()
        }
    }
    
    func didSelectNavigationAction(action: CommentListNavigationAction) {
        _wireframe.performNavigationAction(action)
    }
    
    func numberOfItems() -> Int {
        return _items.count
    }
    
    func itemAtIndexPath(indexPath: NSIndexPath) -> CommentCellItem {
        return _items[indexPath.row]
    }
    
}
